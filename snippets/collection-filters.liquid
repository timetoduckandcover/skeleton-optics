<div class="collection-filters-wrapper">
  <div class="filters-header">
    <div class="filters-header-inner">
      <div class="filters-header-toggle">
        <a href="javascript:;" class="uppercase">Filter</a>
        <span>Showing <i class="products-count-start"></i> - <i class="products-displayed"></i> of {{collection.products.size}} results</span>
        <input type="hidden" name="name" value="{{collection.products.size}}" class="products-total">
      </div>
      <div class="filters-header-options">
        <div class="filters-switch-view">
          <a href="javascript:;" class="sprite filter_grid"></a>
          <a href="javascript:;" class="sprite filter_list"></a>
        </div>
        <select class="collection-paginate" name="">
          <option value="all">All Products</option>
          <option value="3">3 products per page</option>
          <option value="6">6 products per page</option>
          <option value="9">9 products per page</option>
          <option value="12">12 products per page</option>
        </select>
        <select class="collection-sort" name="">
          <option value="" disabled>Sort By</option>
          <option value="popular" selected="selected">Most Popular</option>
          <option value="az">A-Z</option>
          <option value="price-asc">Price Ascending</option>
          <option value="price-desc">Price Descending</option>
        </select>
      </div>
    </div>
  </div>
  <div class="collection-filters">
    <div class="filters-inner">
      <div class="filter-group">
        <h6 class="uppercase">By Style</h6>
        {% for link in linklists.filters-style.links %}
          <label for="tag-{{ link.handle }}">
            <input type="checkbox" name="tag-{{ link.handle }}" class="tag-checkbox" data-tag="{{ link.handle }}" id="tag-{{ link.handle }}" />
            {{ link.handle }}
          </label>
        {% endfor %}
      </div>
      <div class="filter-group">
        <h6 class="uppercase">By Activity</h6>
        {% for link in linklists.filters-activity.links %}
          <label for="tag-{{ link.handle }}">
            <input type="checkbox" name="tag-{{ link.handle }}" class="tag-checkbox" data-tag="{{ link.handle }}" id="tag-{{ link.handle }}" />
            {{ link.handle }}
          </label>
        {% endfor %}
      </div>
      <div class="filter-group hide-input">
        <h6 class="uppercase">Frame Color</h6>
        {% for link in linklists.filters-frames.links %}
          {% capture imageLink %}{{link.handle}}.png{% endcapture %}
          <label for="tag-{{ link.handle }}">
            <input type="checkbox" name="tag-{{ link.handle }}" class="tag-checkbox" data-tag="{{ link.handle }}" id="tag-{{ link.handle }}" />
            <img src="{{ imageLink | asset_url }}" alt="" />
          </label>
        {% endfor %}
      </div>
      <div class="filter-group hide-input">
        <h6 class="uppercase">Lens Color</h6>
        {% for link in linklists.filters-lens.links %}
          {% capture imageLink %}{{link.handle}}.png{% endcapture %}
          <label for="tag-{{ link.handle }}">
            <input type="checkbox" name="tag-{{ link.handle }}" class="tag-checkbox" data-tag="{{ link.handle }}" id="tag-{{ link.handle }}" />
            <img src="{{ imageLink | asset_url }}" alt="" />
          </label>
        {% endfor %}
      </div>
      <div class="filter-group">
        <h6 class="uppercase">Price</h6>
        {% for link in linklists.filters-price.links %}
          <label for="tag-{{ link.handle }}">
            <input type="checkbox" name="tag-{{ link.handle }}" class="tag-checkbox" data-tag="{{ link.handle }}" id="tag-{{ link.handle }}" />
            $ {{ link.handle }}
          </label>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<!-- Filtering system -->
<script>
  jQuery(document).ready(function($) {
    var WINDOW_LOCATION = window.location;
    var PATH = WINDOW_LOCATION.pathname.split('/');
    var PATH_LENGTH = PATH.length;
    var COLLECTION = PATH[2];
    var tags = [];

    // Check if path contains tags (3 index is something after collections/collectionName)
    if(PATH_LENGTH === 4 & PATH[3] !== "") {
      var tags = PATH[3].split('+');
      _selectCheckboxes();
    }

    function _selectCheckboxes() {
      for(var i=0; i<tags.length; i++) {
        var tag = tags[i];
        $('.tag-checkbox').each(function() {
          if($(this).attr('data-tag') === tag) {
            $(this).attr('checked', 'checked');
            $(this).next('img').addClass('active');
          }
        });
      }
    };

    $('.tag-checkbox').on('click', function() {
      var $this = $(this);
      var tagName = $(this).attr('data-tag');
      if($this.is(':checked')) { // add tag to array
        if(tags.indexOf(tagName) === -1) {
          tags.push(tagName);
          _refreshPage();
        }
      } else { // remove tag from array
        var tagIndex = tags.indexOf(tagName);
        tags.splice(tagIndex, 1);
        _refreshPage();
      }
    });

    function _refreshPage() {
      var joinedTags = tags.join('+');
      if(joinedTags.slice(-1) === '+') { // if last char is '+', slice it off
        joinedTags = joinedTags.charAt(joinedTags.length, -1);
      }
      window.location.href = '/collections' + '/' + COLLECTION + '/' + joinedTags;
    };

    $('.filters-header-toggle a').on('click', function() {
      _toggleFilterArea();
    });

    function _toggleFilterArea() {
      var collection = $('.collection-filters');
      collection.toggleClass('active');
      if(collection.hasClass('active')) {
        if($(window).width() > 1200) {
          collection.css('display', 'table');
        } else {
          collection.css('display', 'block');
        }
      } else {
        collection.css('display', 'none');
      }
    }

    $('.collection-paginate').on('change', function() {
      var items = $(this).val();
      if(items === 'all') {
        localStorage.removeItem('items_per_page');
        $('.collection-item').each(function(i) {
          var $this = $(this);
          $this.show();
        });
        var totalCount = Number($('.products-total').val());
        $('.products-displayed').text(totalCount);
      } else {
        localStorage.setItem('items_per_page', items);
        _setPagination();
      }
    });

    function _setPagination() {
      if(localStorage.getItem('items_per_page') !== null) { // check if exists
        var val = localStorage.getItem('items_per_page');
        var valInt = Number(val);
        $('.collection-paginate option[value="' + val + '"]').prop('selected', true);
        var totalCount = Number($('.products-total').val());
        $('.products-count-start').text('1');
        if(totalCount < valInt) {
          if(totalCount === 0) {
            $('.products-count-start').text('0');
          }
          $('.products-displayed').text(totalCount);
        } else {
          $('.products-displayed').text(val);
        }
        $('.collection-item').each(function(i) {
          var $this = $(this);
          if((i + 1) <= valInt) {
            $this.show();
          } else {
            $this.hide();
          }
        });
      } else {
        $('.products-count-start').text('1');
        $('.products-displayed').text('{{collection.products.size}}');
      }
    };
    _setPagination();

    $('.filters-switch-view a').on('click', function() {
      var $this = $(this);
      if($this.hasClass('filter_grid')) {
        localStorage.setItem('collection_style', 'filter_grid');
        _setCollectionLayoutStyle();
      }
      if($this.hasClass('filter_list')) {
        localStorage.setItem('collection_style', 'filter_list');
        _setCollectionLayoutStyle();
      }
    });

    function _setCollectionLayoutStyle() {
      if(localStorage.getItem('collection_style') !== null) {
        var style = localStorage.getItem('collection_style');
        $('.filters-switch-view a').removeClass('active');
        $('.collection-item').removeClass('filter_grid filter_list col-sm-6 col-md-4').addClass(style);
        if(style === 'filter_grid') {
          $('.collection-item').addClass('col-sm-6 col-md-4');
          $('.filters-switch-view .filter_grid').addClass('active');
        } else {
          $('.filters-switch-view .filter_list').addClass('active');
        }
      } else {
        $('.collection-item').addClass('filter_grid col-sm-6 col-md-4');
        $('.filters-switch-view .filter_grid').addClass('active');
      }
    };
    _setCollectionLayoutStyle();

    // Event handler for collection sorting dropdown
    $('.collection-sort').on('change', function() {
      var $this = $(this);
      var val = $this.val();
      var items = $('.collection-item');
      switch(val) {
        case 'az':
          _sortByAZ(items);
          break;
        case 'price-asc':
          _sortByPriceAsc(items);
          break;
        case 'price-desc':
          _sortByPriceDesc(items);
          break;
        case 'popular':
          _sortByPopular(items);
          break;
      };
    });

    function _sortByAZ(items) {
      var alphabeticallyOrderedDivs = items.sort(function(a,b){
        return $(a).find("h2").text() > $(b).find("h2").text();
      });
      $(".collection-listing").html(alphabeticallyOrderedDivs);
    };

    function _sortByPriceAsc(items) {
      items.sort(function (a, b) {
        return $(a).find(".main-price .money").attr('data-amount') - $(b).find(".main-price .money").attr('data-amount');
      }).appendTo($(".collection-listing"));
    };

    function _sortByPriceDesc(items) {
      items.sort(function (a, b) {
        return $(b).find(".main-price .money").attr('data-amount') - $(a).find(".main-price .money").attr('data-amount');
      }).appendTo($(".collection-listing"));
    };

    function _sortByPopular(items) {
      items.sort(function(a, b) {
        return +a.dataset.index - +b.dataset.index;
      }).appendTo($(".collection-listing"));
    };

  });
</script>
